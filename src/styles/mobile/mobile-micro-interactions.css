
/* Mobile micro-interactions and haptic-style feedback */
@media (max-width: 768px) {
  /* Enhanced button interactions with haptic feedback simulation */
  .mobile-haptic-btn {
    transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    transform-origin: center;
  }

  .mobile-haptic-btn:active {
    transform: scale(0.95);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    animation: mobile-haptic-pulse 0.2s ease-out;
  }

  @keyframes mobile-haptic-pulse {
    0% { transform: scale(0.95); }
    50% { transform: scale(0.98); }
    100% { transform: scale(0.95); }
  }

  /* Card tap interactions */
  .mobile-card-interactive {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateZ(0);
  }

  .mobile-card-interactive:active {
    transform: translateY(2px) scale(0.98);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  /* Navigation haptic feedback */
  .mobile-nav-item {
    transition: all 0.15s ease;
    position: relative;
    overflow: hidden;
  }

  .mobile-nav-item::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(59, 130, 246, 0.1);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.3s ease, height 0.3s ease;
  }

  .mobile-nav-item:active::before {
    width: 100px;
    height: 100px;
  }

  /* Input field focus animations */
  .mobile-input-enhanced {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }

  .mobile-input-enhanced:focus {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.15);
  }

  /* Swipe indicators */
  .mobile-swipe-indicator {
    position: relative;
    overflow: hidden;
  }

  .mobile-swipe-indicator::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.5), transparent);
    transform: translateX(-100%);
    animation: mobile-swipe-hint 2s ease-in-out infinite;
  }

  @keyframes mobile-swipe-hint {
    0%, 100% { transform: translateX(-100%); }
    50% { transform: translateX(100%); }
  }

  /* Pull to refresh indicator */
  .mobile-pull-refresh {
    position: relative;
    overflow: hidden;
  }

  .mobile-pull-indicator {
    position: absolute;
    top: -60px;
    left: 50%;
    transform: translateX(-50%);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: rgba(59, 130, 246, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
  }

  .mobile-pull-indicator.active {
    top: 20px;
    opacity: 1;
    animation: mobile-pull-bounce 0.5s ease-out;
  }

  @keyframes mobile-pull-bounce {
    0% { transform: translateX(-50%) scale(0.8); }
    50% { transform: translateX(-50%) scale(1.1); }
    100% { transform: translateX(-50%) scale(1); }
  }

  /* Loading states with micro-interactions */
  .mobile-loading-dots {
    display: inline-flex;
    gap: 4px;
  }

  .mobile-loading-dots span {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: currentColor;
    animation: mobile-dot-bounce 1.4s ease-in-out infinite both;
  }

  .mobile-loading-dots span:nth-child(1) { animation-delay: -0.32s; }
  .mobile-loading-dots span:nth-child(2) { animation-delay: -0.16s; }

  @keyframes mobile-dot-bounce {
    0%, 80%, 100% {
      transform: scale(0);
    }
    40% {
      transform: scale(1);
    }
  }

  /* Success/Error feedback animations */
  .mobile-feedback-success {
    animation: mobile-success-bounce 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  @keyframes mobile-success-bounce {
    0% { transform: scale(0) rotate(0deg); }
    50% { transform: scale(1.2) rotate(180deg); }
    100% { transform: scale(1) rotate(360deg); }
  }

  .mobile-feedback-error {
    animation: mobile-error-shake 0.5s ease-in-out;
  }

  @keyframes mobile-error-shake {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-4px); }
    20%, 40%, 60%, 80% { transform: translateX(4px); }
  }
}
